# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_xsocket', [dirname(__file__)])
        except ImportError:
            import _xsocket
            return _xsocket
        if fp is not None:
            try:
                _mod = imp.load_module('_xsocket', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _xsocket = swig_import_helper()
    del swig_import_helper
else:
    import _xsocket
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def Xsendto(*args):
  return _xsocket.Xsendto(*args)
Xsendto = _xsocket.Xsendto

def Xrecvfrom(*args):
  return _xsocket.Xrecvfrom(*args)
Xrecvfrom = _xsocket.Xrecvfrom

def Xsocket():
  return _xsocket.Xsocket()
Xsocket = _xsocket.Xsocket

def Xconnect(*args):
  return _xsocket.Xconnect(*args)
Xconnect = _xsocket.Xconnect

def Xbind(*args):
  return _xsocket.Xbind(*args)
Xbind = _xsocket.Xbind

def Xclose(*args):
  return _xsocket.Xclose(*args)
Xclose = _xsocket.Xclose

def Xrecv(*args):
  return _xsocket.Xrecv(*args)
Xrecv = _xsocket.Xrecv

def Xsend(*args):
  return _xsocket.Xsend(*args)
Xsend = _xsocket.Xsend

def XgetCID(*args):
  return _xsocket.XgetCID(*args)
XgetCID = _xsocket.XgetCID

def XputCID(*args):
  return _xsocket.XputCID(*args)
XputCID = _xsocket.XputCID

def Xaccept(*args):
  return _xsocket.Xaccept(*args)
Xaccept = _xsocket.Xaccept

def set_conf(*args):
  return _xsocket.set_conf(*args)
set_conf = _xsocket.set_conf

def print_conf():
  return _xsocket.print_conf()
print_conf = _xsocket.print_conf


